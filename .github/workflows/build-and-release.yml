name: "Build and release"
on:
  push:
    tags:
      - '*'

jobs:
  build_release:
    name: ${{ matrix.os.name }}
    runs-on: ${{ matrix.os.runs-on }}
    strategy:
      matrix:
        os:
          - name: Linux
            runs-on: ubuntu-latest
            python_platform: linux
          - name: Windows
            runs-on: windows-latest
            python_platform: win32
          - name: macOS
            runs-on: macos-latest
            python_platform: darwin

    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
# - run: cargo install cross --git https://github.com/cross-rs/cross && cross build
      - name: non-macOS build
        run: cargo build --release
        if: matrix.os.name != 'macOS'
      - name: macOS build
        run: |
          brew install unixodbc
          prefix=$(brew --prefix unixodbc)
          export LDFLAGS="-L${prefix}/lib"
          export CPPFLAGS="-I${prefix}/include"
          mkdir -vp ~/{lib,include}
          ln -vs ${prefix}/lib/* ~/lib/
          ln -vs ${prefix}/include/* ~/include/
          cargo build --release
        if: matrix.os.name == 'macOS'
      - name: build artifact rename
        run: mv "target/release/odbc-cli" "target/release/odbc-cli-$RUNNER_OS-$RUNNER_ARCH"
        if: matrix.os.name != 'Windows'
      - name: non-Windows release
        run: gh release upload "$GITHUB_REF_NAME" "target/release/odbc-cli-$RUNNER_OS-$RUNNER_ARCH"
        env:
          GH_TOKEN: ${{ github.token }}
        if: matrix.os.name != 'Windows'
      - name: Windows release
        run: gh release upload %GITHUB_REF_NAME% "%GITHUB_WORKSPACE%\target\release\odbc-cli.exe"
        env:
          GH_TOKEN: ${{ github.token }}
        shell: cmd
        if: matrix.os.name == 'Windows'
